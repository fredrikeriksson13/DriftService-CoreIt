@model DriftService.Models.ContactViewModelList
<link rel="stylesheet" href="~/Content/StyleSheet.css" />
<link rel="stylesheet" href="~/Content/StyleSheetContactsTable.css" />

@{
    ViewBag.Title = "Contacts";
}

<div class="banner">
    <div class="banner-content">
        <h2><b>Contacts</b></h2>
    </div>
</div>



@{bool MatchingID = true; }
@{bool Empty = true; }

<div class="container">

    <div class="row">
        <div class="col-lg-12 text-aligin-center ">
            <h4>
                Find contact by entering firstname, lastname or company name in textbox.
                Or filter contacts by selected service type.
            </h4>
            <p>Use the search button for both filter alternatives.</p>
        </div>
        <hr />
    </div>
    <div class="row">

        @using (Html.BeginForm())
        {
            @*<div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                            Service Types
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                        @if (Model.SelectedServiceTypeList != null)
                         {

                             if (Model.SelectedServiceTypeList.Any(x => x == 0))
                             {
                                 Empty = true;
                             }
                             else
                             {
                                 Empty = false;
                             }

                         }
                         <li><input type="checkbox" class="checkbox" name="SelectedServiceType" value="0" checked="@Empty" /> <p for="EmptyChk">Empty</p></li>
                         @foreach (var item in Model.ServiceTypes)
                         {
                             if (Model.SelectedServiceTypeList != null)
                             {

                                 if (Model.SelectedServiceTypeList.Any(x => x == item.ServiceTypeID))
                                 {
                                     MatchingID = true;
                                 }
                                 else
                                 {
                                     MatchingID = false;
                                 }

                             }
                            <li><input type="checkbox" class="checkbox" name="SelectedServiceType" value="@item.ServiceTypeID" checked="@MatchingID" /> <p for="@item.ServiceTypeID">@item.Description</p></li>

                         }
                    </ul>
                </div>*@

            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @if (Model.SelectedServiceTypeList != null)
                {

                    if (Model.SelectedServiceTypeList.Any(x => x == 0))
                    {
                        Empty = true;
                    }
                    else
                    {
                        Empty = false;
                    }

                }


                <div class="ServiceTypeFilterBlock">
                    <div class="Vertical-Aligin-Center">
                        <input type="checkbox" class="checkbox" name="SelectedServiceType" value="0" checked="@Empty" />
                    </div>
                    <div class="Vertical-Aligin-Center margin-top-13">
                        <p for="EmptyChk">Empty</p>
                    </div>
                </div>




                @foreach (var item in Model.ServiceTypes)
                {
                    if (Model.SelectedServiceTypeList != null)
                    {

                        if (Model.SelectedServiceTypeList.Any(x => x == item.ServiceTypeID))
                        {
                            MatchingID = true;
                        }
                        else
                        {
                            MatchingID = false;
                        }

                    }
                    <div class="ServiceTypeFilterBlock ">
                        <div class="Vertical-Aligin-Center">
                            <input type="checkbox" class="checkbox" name="SelectedServiceType" value="@item.ServiceTypeID" checked="@MatchingID" />
                        </div>
                        <div class="Vertical-Aligin-Center margin-top-13">
                            <p for="@item.ServiceTypeID">@item.Description</p>
                        </div>
                    </div>
                }
            </div>

            <div class="row">
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 margin-10px text-aligin-right ">
                    @Html.TextBox("SearchString", null, new { placeholder = " Search..." })
                    <button type="submit" value="Search" class=" glyphicon glyphicon-search btn-sm btn-default"></button>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <table class="table" id="ContactTable">
        <thead>
            <tr >
                <th>
                    @Html.ActionLink("First name", "Index", new { sortOrder = ViewBag.FirstNameSortParm })
                </th>
                <th>
                    @Html.ActionLink("Last name", "Index", new { sortOrder = ViewBag.LastNameSortParm })
                </th>
                <th>
                    @Html.ActionLink("Company", "Index", new { sortOrder = ViewBag.CompanyNameSortParm })
                </th>
                <th>
                    @Html.ActionLink("Registered", "Index", new { sortOrder = ViewBag.RegisteredSortParm })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.contactViewModels[0].Email )
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.contactViewModels[0].PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.contactViewModels[0].NotificationType)
                </th>
                <th>
                    @Html.ActionLink("Create New", "Create")
                </th>
            </tr>
        </thead>


        @foreach (var item in Model.contactViewModels)
        {

        <tr class="searchRow"  >
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @Html.DisplayFor(modelItem => item.Business)
            </td>
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @Html.DisplayFor(modelItem => item.RegDate)
            </td>
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td onclick="document.location='@(Url.Action("Details", new { id = item.ContactID }))'">
                @{
            string NotificationTypeName;
                }

                @switch (item.NotificationType)
        {
            case 1:
                NotificationTypeName = "Email";
                break;
            case 2:
                NotificationTypeName = "Sms";
                break;
            case 3:
                NotificationTypeName = "Email & Sms";
                break;
            default:
                NotificationTypeName = "-";
                break;
        }

                @NotificationTypeName
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.ContactID })*@
                <button class="btn btn-xs btn-warning margin-2px" onclick="editProduct(@item.ContactID)"> Edit </button>
            
                <div id="ContactDeleteBtn">
                    @using (Html.BeginForm("DeleteContact", "Contact", new { id = item.ContactID }))
                     {
                      
                      <button type="button" class="btn btn-danger btn-xs margin-2px" data-toggle="modal" data-target="#@item.ContactID"
                              data-whatever="@item.ContactID">
                              Delete
                      </button>
                       
               
                //Modal delete 
                <div class="modal fade" id="@item.ContactID" role="dialog" aria-labelledby="myModalLabel">
                    <div class="modal-dialog modal-sm" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title" id="myModalLabel">Confirm Delete </h4>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete: <span><b>@item.FirstName  @item.LastName</b> ?</span>
                            </div>
                            <div class="modal-footer">
                                <input type="submit" value="Delete" class="btn btn-danger" />
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                     }
                    
                </div>
            </td>
        </tr>

        }
    </table>

    <div id="modalWrapper"> </div>

</div>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="~/Scripts/EditRow.js"></script>