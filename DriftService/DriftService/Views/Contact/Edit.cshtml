@model DriftService.Models.ContactViewModel



@using (Ajax.BeginForm("Edit", "Contact", new AjaxOptions {  UpdateTargetId = "modalWrapper", HttpMethod = "POST", InsertionMode = InsertionMode.Replace, OnSuccess="test"  }))
{
<div class="modal fade" id="editModal" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Edit</h4>
            </div>
            <div class="modal-body">

        @Html.AntiForgeryToken()
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ContactID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-lg-4" })
                        <div class="col-md-10 col-lg-8">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" , @id = "FirstName"} })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 col-lg-4" })
                        <div class="col-md-10 col-lg-8">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Business, htmlAttributes: new { @class = "control-label col-md-2 col-lg-4" })
                        <div class="col-md-10 col-lg-8">
                            @Html.EditorFor(model => model.Business, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Business, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 col-lg-4" })
                        <div class="col-md-10 col-lg-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2 col-lg-4" })
                        <div class="col-md-10 col-lg-8">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })<br />
                        </div>
                    </div>

                    <div class="col-xs-4 col-md-4 col-lg-4">
                        @{
                            bool MatchingID = false;
                        }
                        <h4><b>Service type</b></h4>

                        @foreach (var item in Model.ServiceTypeList)
                        {
                            if (Model.SelectedServiceTypeList != null)
                            {
                                if (Model.SelectedServiceTypeList.Any(x => x == item.ServiceTypeID))
                                {
                                    MatchingID = true;
                                }
                                else
                                {
                                    MatchingID = false;
                                }
                            }
                            if (Model.ContactServiceTypeList != null)
                            {
                                if (Model.ContactServiceTypeList.Any(x => x.ServiceTypeID == item.ServiceTypeID))
                                {
                                    MatchingID = true;
                                }
                                else
                                {
                                    MatchingID = false;
                                }
                            }

                            <div class="ServiceTypeBlock">
                                <label for="@item.Description">@item.Description</label>
                                <div class="ServiceTypeCheckBox">
                                    <input type="checkbox" class="checkbox" name="SelectedServiceType" value="@item.ServiceTypeID" id="@item.ServiceTypeID" checked=@MatchingID />
                                </div>
                            </div>
                        }

                        <div class="text-danger">
                            @ViewBag.ErrorMessageServiceType
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-2 col-md-2 col-lg-offset-2">
                        <h4><b>Notification type</b></h4>
                        <div class="BorderBlack">
                            <div class="checkBoxMargin">
                                @Html.CheckBoxFor(m => m.SelectedSms)<b>SMS</b><br /><br />
                                @Html.CheckBoxFor(m => m.SelectedEmail)<b>Email</b>
                            </div>
                        </div>
                        <div class="text-danger">
                            @ViewBag.ErrorMessageNotificationType
                        </div>
                    </div>
                </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <input type="submit" value="Edit" class="btn btn-danger" id="btnSubmit" />
            </div>
  
        </div>
        </div>

}
<script src="~/Scripts/EditRow.js"></script>